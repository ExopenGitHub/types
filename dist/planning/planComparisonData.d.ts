import { z } from "zod";
export declare const planComparisonDataSchema: z.ZodObject<{
    plan: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        description: z.ZodString;
        periodFrom: z.ZodString;
        periodTo: z.ZodString;
        basedOnPlanId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        legalEntityId: z.ZodString;
        actualsFrom: z.ZodString;
        status: z.ZodUnion<[z.ZodLiteral<"in_progress">, z.ZodLiteral<"done">]>;
        rootTaskId: z.ZodString;
        createdAt: z.ZodDate;
        comparisonPlans: z.ZodArray<z.ZodObject<{
            planId: z.ZodString;
            taskId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            planId: string;
            taskId: string;
        }, {
            planId: string;
            taskId: string;
        }>, "many">;
        createTemplatesForRegisters: z.ZodUnion<[z.ZodBoolean, z.ZodNull]>;
        createTasksForCostCenters: z.ZodUnion<[z.ZodBoolean, z.ZodNull]>;
        createScenariosFromActuals: z.ZodUnion<[z.ZodBoolean, z.ZodNull]>;
        createScenariosPerTask: z.ZodUnion<[z.ZodBoolean, z.ZodNull]>;
        periodLength: z.ZodNumber;
        companyId: z.ZodString;
        thousands: z.ZodBoolean;
        owner: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        name: string;
        description: string;
        status: "done" | "in_progress";
        createdAt: Date;
        periodFrom: string;
        periodTo: string;
        owner: string;
        rootTaskId: string;
        basedOnPlanId: string | null;
        legalEntityId: string;
        actualsFrom: string;
        comparisonPlans: {
            planId: string;
            taskId: string;
        }[];
        createTemplatesForRegisters: boolean | null;
        createTasksForCostCenters: boolean | null;
        createScenariosFromActuals: boolean | null;
        createScenariosPerTask: boolean | null;
        periodLength: number;
        companyId: string;
        thousands: boolean;
    }, {
        id: string;
        name: string;
        description: string;
        status: "done" | "in_progress";
        createdAt: Date;
        periodFrom: string;
        periodTo: string;
        owner: string;
        rootTaskId: string;
        basedOnPlanId: string | null;
        legalEntityId: string;
        actualsFrom: string;
        comparisonPlans: {
            planId: string;
            taskId: string;
        }[];
        createTemplatesForRegisters: boolean | null;
        createTasksForCostCenters: boolean | null;
        createScenariosFromActuals: boolean | null;
        createScenariosPerTask: boolean | null;
        periodLength: number;
        companyId: string;
        thousands: boolean;
    }>;
    allScenarios: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        taskId: z.ZodString;
        name: z.ZodString;
        description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        active: z.ZodBoolean;
        objectTransactions: z.ZodArray<z.ZodDiscriminatedUnion<"refType", [z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                amount: z.ZodNumber;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    name: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    accountRecipeRows: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        account: z.ZodObject<{
                            id: z.ZodString;
                            accountNumber: z.ZodString;
                            accountName: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }>;
                        amount: z.ZodNumber;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        subItems: z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            account: z.ZodObject<{
                                id: z.ZodString;
                                accountNumber: z.ZodString;
                                accountName: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }>;
                            amount: z.ZodNumber;
                            offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                            amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                            parentId: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }>, "many">;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }>, "many">;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"sale">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                amount: z.ZodNumber;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    name: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    accountRecipeRows: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        account: z.ZodObject<{
                            id: z.ZodString;
                            accountNumber: z.ZodString;
                            accountName: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }>;
                        amount: z.ZodNumber;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        subItems: z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            account: z.ZodObject<{
                                id: z.ZodString;
                                accountNumber: z.ZodString;
                                accountName: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }>;
                            amount: z.ZodNumber;
                            offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                            amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                            parentId: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }>, "many">;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }>, "many">;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"sale_pro">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                amount: z.ZodNumber;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    name: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    accountRecipeRows: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        account: z.ZodObject<{
                            id: z.ZodString;
                            accountNumber: z.ZodString;
                            accountName: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }>;
                        amount: z.ZodNumber;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        subItems: z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            account: z.ZodObject<{
                                id: z.ZodString;
                                accountNumber: z.ZodString;
                                accountName: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }>;
                            amount: z.ZodNumber;
                            offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                            amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                            parentId: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }>, "many">;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }>, "many">;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"sale_lts">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                amount: z.ZodNumber;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    name: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    accountRecipeRows: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        account: z.ZodObject<{
                            id: z.ZodString;
                            accountNumber: z.ZodString;
                            accountName: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }>;
                        amount: z.ZodNumber;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        subItems: z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            account: z.ZodObject<{
                                id: z.ZodString;
                                accountNumber: z.ZodString;
                                accountName: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }>;
                            amount: z.ZodNumber;
                            offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                            amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                            parentId: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }>, "many">;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }>, "many">;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"employee">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                amount: z.ZodNumber;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    name: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    accountRecipeRows: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        account: z.ZodObject<{
                            id: z.ZodString;
                            accountNumber: z.ZodString;
                            accountName: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }>;
                        amount: z.ZodNumber;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        subItems: z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            account: z.ZodObject<{
                                id: z.ZodString;
                                accountNumber: z.ZodString;
                                accountName: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }>;
                            amount: z.ZodNumber;
                            offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                            amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                            parentId: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }>, "many">;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }>, "many">;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"employee_pro">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                amount: z.ZodNumber;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    name: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    accountRecipeRows: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        account: z.ZodObject<{
                            id: z.ZodString;
                            accountNumber: z.ZodString;
                            accountName: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }>;
                        amount: z.ZodNumber;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        subItems: z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            account: z.ZodObject<{
                                id: z.ZodString;
                                accountNumber: z.ZodString;
                                accountName: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }>;
                            amount: z.ZodNumber;
                            offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                            amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                            parentId: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }>, "many">;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }>, "many">;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"employee_lts">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                amount: z.ZodNumber;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    name: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    accountRecipeRows: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        account: z.ZodObject<{
                            id: z.ZodString;
                            accountNumber: z.ZodString;
                            accountName: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }>;
                        amount: z.ZodNumber;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        subItems: z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            account: z.ZodObject<{
                                id: z.ZodString;
                                accountNumber: z.ZodString;
                                accountName: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }, {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            }>;
                            amount: z.ZodNumber;
                            offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                            amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                            parentId: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }, {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }>, "many">;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }>, "many">;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"activity_lts">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            account: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            amount: z.ZodNumber;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"account">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            account: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            amount: z.ZodNumber;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"account_pro">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            account: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            amount: z.ZodNumber;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"account_lts">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            account: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            amount: z.ZodNumber;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"ib">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"asset">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"employee_pp">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"common">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>]>, "many">;
        taskIds: z.ZodArray<z.ZodString, "many">;
        baseline: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        id: string;
        active: boolean;
        name: string;
        description: string | null;
        taskId: string;
        objectTransactions: ({
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        })[];
        taskIds: string[];
        baseline: boolean;
    }, {
        id: string;
        active: boolean;
        name: string;
        description: string | null;
        taskId: string;
        objectTransactions: ({
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        })[];
        taskIds: string[];
        baseline: boolean;
    }>, "many">;
    accountLinks: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        description: z.ZodString;
        planId: z.ZodString;
        accounts: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>, "many">;
        accountRecipes: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            description: z.ZodNullable<z.ZodString>;
            moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
            versionId: z.ZodString;
            accountRecipeRows: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                account: z.ZodObject<{
                    id: z.ZodString;
                    accountNumber: z.ZodString;
                    accountName: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                }, {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                }>;
                amount: z.ZodNumber;
                offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                subItems: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    account: z.ZodObject<{
                        id: z.ZodString;
                        accountNumber: z.ZodString;
                        accountName: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    }>;
                    amount: z.ZodNumber;
                    offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                    amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                    parentId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }, {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }, {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }>, "many">;
            createdAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }>, "many">;
        active: z.ZodBoolean;
        ibOnly: z.ZodBoolean;
        createdAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        id: string;
        active: boolean;
        name: string;
        description: string;
        createdAt: Date;
        planId: string;
        accountRecipes: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }[];
        accounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        ibOnly: boolean;
    }, {
        id: string;
        active: boolean;
        name: string;
        description: string;
        createdAt: Date;
        planId: string;
        accountRecipes: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }[];
        accounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        ibOnly: boolean;
    }>, "many">;
    vatSettings: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        vatType: z.ZodUnion<[z.ZodLiteral<"year">, z.ZodLiteral<"quarter">, z.ZodLiteral<"monthLt40">, z.ZodLiteral<"monthGte40">]>;
        inVatAccounts: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>, "many">;
        outVatAccounts: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>, "many">;
        vatRecAccountAsset: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        vatRecAccountDebt: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        taxAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        checkAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        active: z.ZodBoolean;
        planId: z.ZodString;
        createdAt: z.ZodDate;
        fiscalyearEnd: z.ZodNumber;
        declareDigital: z.ZodBoolean;
        euTrade: z.ZodBoolean;
        individualCompany: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatType: "year" | "quarter" | "monthLt40" | "monthGte40";
        inVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        outVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        vatRecAccountAsset: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatRecAccountDebt: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        taxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        fiscalyearEnd: number;
        declareDigital: boolean;
        euTrade: boolean;
        individualCompany: boolean;
    }, {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatType: "year" | "quarter" | "monthLt40" | "monthGte40";
        inVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        outVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        vatRecAccountAsset: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatRecAccountDebt: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        taxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        fiscalyearEnd: number;
        declareDigital: boolean;
        euTrade: boolean;
        individualCompany: boolean;
    }>, "many">;
    taskModules: z.ZodArray<z.ZodObject<{
        task: z.ZodString;
        module: z.ZodString;
        parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
    }, "strip", z.ZodTypeAny, {
        module: string;
        parentId: string | null;
        task: string;
    }, {
        module: string;
        parentId: string | null;
        task: string;
    }>, "many">;
    assets: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        assetNumber: z.ZodString;
        description: z.ZodString;
        assetType: z.ZodObject<{
            id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            name: z.ZodString;
            depreciableAmount: z.ZodNumber;
            note: z.ZodString;
            assetAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            depreciationAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            revaluationAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            writeDownAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            saleCounterAcount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            accumulatedDepreciationsAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            accumulatedWriteDownsAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            capitalGainsAssetsAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            lossesAssetsAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            createdAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            createdAt: Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        }, {
            id: string | bigint;
            name: string;
            createdAt: string | Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
        }>;
        organizationalUnitId: z.ZodUnion<[z.ZodObject<{
            code: z.ZodString;
            id: z.ZodString;
            active: z.ZodBoolean;
            name: z.ZodString;
            createdAt: z.ZodDate;
            planId: z.ZodString;
            syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
        }, "strip", z.ZodTypeAny, {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        }, {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        }>, z.ZodNull]>;
        acquisitionValue: z.ZodNumber;
        residualValue: z.ZodNumber;
        acquisitionDate: z.ZodString;
        depreciationStartDate: z.ZodString;
        depreciationPeriodYear: z.ZodNumber;
        depreciationPeriodMonth: z.ZodNumber;
        depreciationFinalDate: z.ZodString;
        depreciationMethod: z.ZodLiteral<"linear">;
        scenarioId: z.ZodString;
        acquisitionAccountRecipe: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            description: z.ZodNullable<z.ZodString>;
            moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
            versionId: z.ZodString;
            accountRecipeRows: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                account: z.ZodObject<{
                    id: z.ZodString;
                    accountNumber: z.ZodString;
                    accountName: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                }, {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                }>;
                amount: z.ZodNumber;
                offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                subItems: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    account: z.ZodObject<{
                        id: z.ZodString;
                        accountNumber: z.ZodString;
                        accountName: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    }>;
                    amount: z.ZodNumber;
                    offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                    amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                    parentId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }, {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }, {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }>, "many">;
            createdAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }>;
        saleValue: z.ZodNullable<z.ZodNumber>;
        saleDate: z.ZodNullable<z.ZodString>;
        saleAccountRecipe: z.ZodNullable<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            description: z.ZodNullable<z.ZodString>;
            moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
            versionId: z.ZodString;
            accountRecipeRows: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                account: z.ZodObject<{
                    id: z.ZodString;
                    accountNumber: z.ZodString;
                    accountName: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                }, {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                }>;
                amount: z.ZodNumber;
                offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                subItems: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    account: z.ZodObject<{
                        id: z.ZodString;
                        accountNumber: z.ZodString;
                        accountName: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    }>;
                    amount: z.ZodNumber;
                    offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                    amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                    parentId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }, {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }, {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }>, "many">;
            createdAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }>>;
        revaluationValue: z.ZodNullable<z.ZodNumber>;
        revaluationDate: z.ZodNullable<z.ZodString>;
        writeDownValue: z.ZodNullable<z.ZodNumber>;
        writeDownDate: z.ZodNullable<z.ZodString>;
        discardedDate: z.ZodNullable<z.ZodString>;
        taskId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        description: string;
        organizationalUnitId: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        } | null;
        scenarioId: string;
        taskId: string;
        assetNumber: string;
        assetType: {
            id: string;
            name: string;
            createdAt: Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        acquisitionValue: number;
        residualValue: number;
        acquisitionDate: string;
        depreciationStartDate: string;
        depreciationPeriodYear: number;
        depreciationPeriodMonth: number;
        depreciationFinalDate: string;
        depreciationMethod: "linear";
        acquisitionAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        };
        saleValue: number | null;
        saleDate: string | null;
        saleAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        } | null;
        revaluationValue: number | null;
        revaluationDate: string | null;
        writeDownValue: number | null;
        writeDownDate: string | null;
        discardedDate: string | null;
    }, {
        id: string;
        description: string;
        organizationalUnitId: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        } | null;
        scenarioId: string;
        taskId: string;
        assetNumber: string;
        assetType: {
            id: string | bigint;
            name: string;
            createdAt: string | Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
        };
        acquisitionValue: number;
        residualValue: number;
        acquisitionDate: string;
        depreciationStartDate: string;
        depreciationPeriodYear: number;
        depreciationPeriodMonth: number;
        depreciationFinalDate: string;
        depreciationMethod: "linear";
        acquisitionAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        };
        saleValue: number | null;
        saleDate: string | null;
        saleAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        } | null;
        revaluationValue: number | null;
        revaluationDate: string | null;
        writeDownValue: number | null;
        writeDownDate: string | null;
        discardedDate: string | null;
    }>, "many">;
    employeePerPersons: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        employeeCode: z.ZodString;
        firstName: z.ZodString;
        lastName: z.ZodString;
        employmentDate: z.ZodString;
        birthDate: z.ZodString;
        employedToDate: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        salaryForm: z.ZodUnion<[z.ZodLiteral<"Hour">, z.ZodLiteral<"Month">]>;
        personnelTypeId: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            salaryAccount: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            holidayPayAccount: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            ChangeAccruedHolidayPayAccount: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            createdAt: z.ZodString;
            planId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        }, {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        }>;
        personnelAgreementId: z.ZodObject<{
            id: z.ZodString;
            salaryRevisionMonth: z.ZodString;
            holidayPay: z.ZodNumber;
            holidayAllowance: z.ZodNumber;
            vacationDays: z.ZodNumber;
            groupInsurance: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            name: z.ZodString;
            createdAt: z.ZodString;
            planId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        }, {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        }>;
        monthlySalary: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
        hourlyPay: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
        salaryRevisionPercent: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
        active: z.ZodBoolean;
        scenarioId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        distribution: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            amount: z.ZodNumber;
            employeeId: z.ZodString;
            organizationalUnit: z.ZodUnion<[z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            }>, z.ZodNull]>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }, {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }>, "many">;
        serviceLevelAllocationKeyId: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            allocations: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                period: z.ZodString;
                amount: z.ZodNumber;
                employeeAllocationKeyId: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }, {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }>, "many">;
            employeeId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            createdAt: z.ZodString;
            keyType: z.ZodString;
            keyClass: z.ZodUnion<[z.ZodLiteral<"vacation">, z.ZodLiteral<"servicelevel">]>;
            organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        }, {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        }>;
        vacationAllocationKeyId: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            allocations: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                period: z.ZodString;
                amount: z.ZodNumber;
                employeeAllocationKeyId: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }, {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }>, "many">;
            employeeId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            createdAt: z.ZodString;
            keyType: z.ZodString;
            keyClass: z.ZodUnion<[z.ZodLiteral<"vacation">, z.ZodLiteral<"servicelevel">]>;
            organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        }, {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        }>;
        benefits: z.ZodArray<z.ZodObject<{
            code: z.ZodString;
            id: z.ZodString;
            active: z.ZodBoolean;
            name: z.ZodString;
            amount: z.ZodNumber;
            createdAt: z.ZodDate;
            planId: z.ZodString;
            syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
            accountRecipes: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                description: z.ZodNullable<z.ZodString>;
                moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                versionId: z.ZodString;
                accountRecipeRows: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    account: z.ZodObject<{
                        id: z.ZodString;
                        accountNumber: z.ZodString;
                        accountName: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    }>;
                    amount: z.ZodNumber;
                    offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                    amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                    subItems: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        account: z.ZodObject<{
                            id: z.ZodString;
                            accountNumber: z.ZodString;
                            accountName: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }, {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        }>;
                        amount: z.ZodNumber;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        parentId: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }, {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }, {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }>, "many">;
                createdAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                accountRecipeRows: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }[];
                createdAt: Date;
            }, {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                accountRecipeRows: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }[];
                createdAt: Date;
            }>, "many">;
            amountPercent: z.ZodNumber;
            taxType: z.ZodUnion<[z.ZodLiteral<"Yes">, z.ZodLiteral<"No">]>;
            socType: z.ZodUnion<[z.ZodLiteral<"Social">, z.ZodLiteral<"Special">, z.ZodLiteral<"No">]>;
        }, "strip", z.ZodTypeAny, {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                accountRecipeRows: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }[];
                createdAt: Date;
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }, {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                accountRecipeRows: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }[];
                createdAt: Date;
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }>, "many">;
        taskId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        active: boolean;
        distribution: {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }[];
        employeeCode: string;
        firstName: string;
        lastName: string;
        employmentDate: string;
        birthDate: string;
        employedToDate: string | null;
        salaryForm: "Hour" | "Month";
        personnelTypeId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        personnelAgreementId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        };
        monthlySalary: number | null;
        hourlyPay: number | null;
        salaryRevisionPercent: number | null;
        scenarioId: string | null;
        serviceLevelAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        vacationAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        benefits: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                accountRecipeRows: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }[];
                createdAt: Date;
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }[];
        taskId: string | null;
    }, {
        id: string;
        active: boolean;
        distribution: {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }[];
        employeeCode: string;
        firstName: string;
        lastName: string;
        employmentDate: string;
        birthDate: string;
        employedToDate: string | null;
        salaryForm: "Hour" | "Month";
        personnelTypeId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        personnelAgreementId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        };
        monthlySalary: number | null;
        hourlyPay: number | null;
        salaryRevisionPercent: number | null;
        scenarioId: string | null;
        serviceLevelAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        vacationAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        benefits: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                accountRecipeRows: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }[];
                createdAt: Date;
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }[];
        taskId: string | null;
    }>, "many">;
    employeeSettings: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        socialSecurityAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        socialSecurityHolidayPayAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        pensionAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        groupInsuranceAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        specialPayrollTaxAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        employeeTaxesDebtAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        socialSecurityDebtAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        accruedHolidayPayDebtAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        accruedSocialSecurityDebtAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        checkAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        name: z.ZodString;
        active: z.ZodBoolean;
        createdAt: z.ZodDate;
        planId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        socialSecurityAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityHolidayPayAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        pensionAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        groupInsuranceAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        specialPayrollTaxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        employeeTaxesDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedHolidayPayDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedSocialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
    }, {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        socialSecurityAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityHolidayPayAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        pensionAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        groupInsuranceAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        specialPayrollTaxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        employeeTaxesDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedHolidayPayDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedSocialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    plan: {
        id: string;
        name: string;
        description: string;
        status: "done" | "in_progress";
        createdAt: Date;
        periodFrom: string;
        periodTo: string;
        owner: string;
        rootTaskId: string;
        basedOnPlanId: string | null;
        legalEntityId: string;
        actualsFrom: string;
        comparisonPlans: {
            planId: string;
            taskId: string;
        }[];
        createTemplatesForRegisters: boolean | null;
        createTasksForCostCenters: boolean | null;
        createScenariosFromActuals: boolean | null;
        createScenariosPerTask: boolean | null;
        periodLength: number;
        companyId: string;
        thousands: boolean;
    };
    allScenarios: {
        id: string;
        active: boolean;
        name: string;
        description: string | null;
        taskId: string;
        objectTransactions: ({
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        })[];
        taskIds: string[];
        baseline: boolean;
    }[];
    accountLinks: {
        id: string;
        active: boolean;
        name: string;
        description: string;
        createdAt: Date;
        planId: string;
        accountRecipes: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }[];
        accounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        ibOnly: boolean;
    }[];
    vatSettings: {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatType: "year" | "quarter" | "monthLt40" | "monthGte40";
        inVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        outVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        vatRecAccountAsset: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatRecAccountDebt: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        taxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        fiscalyearEnd: number;
        declareDigital: boolean;
        euTrade: boolean;
        individualCompany: boolean;
    }[];
    taskModules: {
        module: string;
        parentId: string | null;
        task: string;
    }[];
    assets: {
        id: string;
        description: string;
        organizationalUnitId: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        } | null;
        scenarioId: string;
        taskId: string;
        assetNumber: string;
        assetType: {
            id: string;
            name: string;
            createdAt: Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        acquisitionValue: number;
        residualValue: number;
        acquisitionDate: string;
        depreciationStartDate: string;
        depreciationPeriodYear: number;
        depreciationPeriodMonth: number;
        depreciationFinalDate: string;
        depreciationMethod: "linear";
        acquisitionAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        };
        saleValue: number | null;
        saleDate: string | null;
        saleAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        } | null;
        revaluationValue: number | null;
        revaluationDate: string | null;
        writeDownValue: number | null;
        writeDownDate: string | null;
        discardedDate: string | null;
    }[];
    employeePerPersons: {
        id: string;
        active: boolean;
        distribution: {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }[];
        employeeCode: string;
        firstName: string;
        lastName: string;
        employmentDate: string;
        birthDate: string;
        employedToDate: string | null;
        salaryForm: "Hour" | "Month";
        personnelTypeId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        personnelAgreementId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        };
        monthlySalary: number | null;
        hourlyPay: number | null;
        salaryRevisionPercent: number | null;
        scenarioId: string | null;
        serviceLevelAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        vacationAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        benefits: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                accountRecipeRows: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }[];
                createdAt: Date;
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }[];
        taskId: string | null;
    }[];
    employeeSettings: {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        socialSecurityAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityHolidayPayAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        pensionAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        groupInsuranceAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        specialPayrollTaxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        employeeTaxesDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedHolidayPayDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedSocialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
    }[];
}, {
    plan: {
        id: string;
        name: string;
        description: string;
        status: "done" | "in_progress";
        createdAt: Date;
        periodFrom: string;
        periodTo: string;
        owner: string;
        rootTaskId: string;
        basedOnPlanId: string | null;
        legalEntityId: string;
        actualsFrom: string;
        comparisonPlans: {
            planId: string;
            taskId: string;
        }[];
        createTemplatesForRegisters: boolean | null;
        createTasksForCostCenters: boolean | null;
        createScenariosFromActuals: boolean | null;
        createScenariosPerTask: boolean | null;
        periodLength: number;
        companyId: string;
        thousands: boolean;
    };
    allScenarios: {
        id: string;
        active: boolean;
        name: string;
        description: string | null;
        taskId: string;
        objectTransactions: ({
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    accountRecipeRows: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        subItems: {
                            id: string;
                            account: {
                                id: string;
                                accountNumber: string;
                                accountName: string;
                            };
                            amount: number;
                            offsetDays: number | null;
                            amountType: "fixed" | "percent";
                            parentId: string;
                        }[];
                    }[];
                    createdAt: Date;
                }[];
            };
            quantity: number;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        })[];
        taskIds: string[];
        baseline: boolean;
    }[];
    accountLinks: {
        id: string;
        active: boolean;
        name: string;
        description: string;
        createdAt: Date;
        planId: string;
        accountRecipes: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        }[];
        accounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        ibOnly: boolean;
    }[];
    vatSettings: {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatType: "year" | "quarter" | "monthLt40" | "monthGte40";
        inVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        outVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        vatRecAccountAsset: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatRecAccountDebt: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        taxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        fiscalyearEnd: number;
        declareDigital: boolean;
        euTrade: boolean;
        individualCompany: boolean;
    }[];
    taskModules: {
        module: string;
        parentId: string | null;
        task: string;
    }[];
    assets: {
        id: string;
        description: string;
        organizationalUnitId: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        } | null;
        scenarioId: string;
        taskId: string;
        assetNumber: string;
        assetType: {
            id: string | bigint;
            name: string;
            createdAt: string | Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
        };
        acquisitionValue: number;
        residualValue: number;
        acquisitionDate: string;
        depreciationStartDate: string;
        depreciationPeriodYear: number;
        depreciationPeriodMonth: number;
        depreciationFinalDate: string;
        depreciationMethod: "linear";
        acquisitionAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        };
        saleValue: number | null;
        saleDate: string | null;
        saleAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            accountRecipeRows: {
                id: string;
                account: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                };
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                subItems: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string;
                }[];
            }[];
            createdAt: Date;
        } | null;
        revaluationValue: number | null;
        revaluationDate: string | null;
        writeDownValue: number | null;
        writeDownDate: string | null;
        discardedDate: string | null;
    }[];
    employeePerPersons: {
        id: string;
        active: boolean;
        distribution: {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }[];
        employeeCode: string;
        firstName: string;
        lastName: string;
        employmentDate: string;
        birthDate: string;
        employedToDate: string | null;
        salaryForm: "Hour" | "Month";
        personnelTypeId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        personnelAgreementId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        };
        monthlySalary: number | null;
        hourlyPay: number | null;
        salaryRevisionPercent: number | null;
        scenarioId: string | null;
        serviceLevelAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        vacationAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        benefits: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                accountRecipeRows: {
                    id: string;
                    account: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                    };
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    subItems: {
                        id: string;
                        account: {
                            id: string;
                            accountNumber: string;
                            accountName: string;
                        };
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string;
                    }[];
                }[];
                createdAt: Date;
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }[];
        taskId: string | null;
    }[];
    employeeSettings: {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        socialSecurityAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityHolidayPayAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        pensionAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        groupInsuranceAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        specialPayrollTaxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        employeeTaxesDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedHolidayPayDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedSocialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
    }[];
}>;
export declare type PlanComparisonData = z.infer<typeof planComparisonDataSchema>;
export declare const getPlanComparisonDataResponseSchema: z.ZodArray<z.ZodObject<{
    plan: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        description: z.ZodString;
        periodFrom: z.ZodString;
        periodTo: z.ZodString;
        basedOnPlanId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        legalEntityId: z.ZodString;
        actualsFrom: z.ZodString;
        status: z.ZodUnion<[z.ZodLiteral<"in_progress">, z.ZodLiteral<"done">]>;
        rootTaskId: z.ZodString;
        createdAt: z.ZodDate;
        comparisonPlans: z.ZodArray<z.ZodObject<{
            planId: z.ZodString;
            taskId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            planId: string;
            taskId: string;
        }, {
            planId: string;
            taskId: string;
        }>, "many">;
        createTemplatesForRegisters: z.ZodUnion<[z.ZodBoolean, z.ZodNull]>;
        createTasksForCostCenters: z.ZodUnion<[z.ZodBoolean, z.ZodNull]>;
        createScenariosFromActuals: z.ZodUnion<[z.ZodBoolean, z.ZodNull]>;
        createScenariosPerTask: z.ZodUnion<[z.ZodBoolean, z.ZodNull]>;
        periodLength: z.ZodNumber;
        companyId: z.ZodString;
        thousands: z.ZodBoolean;
        owner: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        name: string;
        description: string;
        status: "done" | "in_progress";
        createdAt: Date;
        periodFrom: string;
        periodTo: string;
        owner: string;
        rootTaskId: string;
        basedOnPlanId: string | null;
        legalEntityId: string;
        actualsFrom: string;
        comparisonPlans: {
            planId: string;
            taskId: string;
        }[];
        createTemplatesForRegisters: boolean | null;
        createTasksForCostCenters: boolean | null;
        createScenariosFromActuals: boolean | null;
        createScenariosPerTask: boolean | null;
        periodLength: number;
        companyId: string;
        thousands: boolean;
    }, {
        id: string;
        name: string;
        description: string;
        status: "done" | "in_progress";
        createdAt: Date;
        periodFrom: string;
        periodTo: string;
        owner: string;
        rootTaskId: string;
        basedOnPlanId: string | null;
        legalEntityId: string;
        actualsFrom: string;
        comparisonPlans: {
            planId: string;
            taskId: string;
        }[];
        createTemplatesForRegisters: boolean | null;
        createTasksForCostCenters: boolean | null;
        createScenariosFromActuals: boolean | null;
        createScenariosPerTask: boolean | null;
        periodLength: number;
        companyId: string;
        thousands: boolean;
    }>;
    allScenarios: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        active: z.ZodBoolean;
        name: z.ZodString;
        description: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        taskId: z.ZodString;
        taskIds: z.ZodArray<z.ZodString, "many">;
        baseline: z.ZodBoolean;
        objectTransactions: z.ZodArray<z.ZodDiscriminatedUnion<"refType", [z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                amount: z.ZodNumber;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    createdAt: z.ZodDate;
                    name: z.ZodString;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    jsonRows: z.ZodArray<z.ZodObject<{
                        accountId: z.ZodString;
                        accountName: z.ZodString;
                        accountNumber: z.ZodString;
                        accountRecipeId: z.ZodString;
                        amount: z.ZodNumber;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        id: z.ZodString;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"sale">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                amount: z.ZodNumber;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    createdAt: z.ZodDate;
                    name: z.ZodString;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    jsonRows: z.ZodArray<z.ZodObject<{
                        accountId: z.ZodString;
                        accountName: z.ZodString;
                        accountNumber: z.ZodString;
                        accountRecipeId: z.ZodString;
                        amount: z.ZodNumber;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        id: z.ZodString;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"sale_pro">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                amount: z.ZodNumber;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    createdAt: z.ZodDate;
                    name: z.ZodString;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    jsonRows: z.ZodArray<z.ZodObject<{
                        accountId: z.ZodString;
                        accountName: z.ZodString;
                        accountNumber: z.ZodString;
                        accountRecipeId: z.ZodString;
                        amount: z.ZodNumber;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        id: z.ZodString;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"sale_lts">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                amount: z.ZodNumber;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    createdAt: z.ZodDate;
                    name: z.ZodString;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    jsonRows: z.ZodArray<z.ZodObject<{
                        accountId: z.ZodString;
                        accountName: z.ZodString;
                        accountNumber: z.ZodString;
                        accountRecipeId: z.ZodString;
                        amount: z.ZodNumber;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        id: z.ZodString;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"employee">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                amount: z.ZodNumber;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    createdAt: z.ZodDate;
                    name: z.ZodString;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    jsonRows: z.ZodArray<z.ZodObject<{
                        accountId: z.ZodString;
                        accountName: z.ZodString;
                        accountNumber: z.ZodString;
                        accountRecipeId: z.ZodString;
                        amount: z.ZodNumber;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        id: z.ZodString;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"employee_pro">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                amount: z.ZodNumber;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    createdAt: z.ZodDate;
                    name: z.ZodString;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    jsonRows: z.ZodArray<z.ZodObject<{
                        accountId: z.ZodString;
                        accountName: z.ZodString;
                        accountNumber: z.ZodString;
                        accountRecipeId: z.ZodString;
                        amount: z.ZodNumber;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        id: z.ZodString;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"employee_lts">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            generalObject: z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                amount: z.ZodNumber;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
                accountRecipes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    description: z.ZodNullable<z.ZodString>;
                    createdAt: z.ZodDate;
                    name: z.ZodString;
                    moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                    versionId: z.ZodString;
                    jsonRows: z.ZodArray<z.ZodObject<{
                        accountId: z.ZodString;
                        accountName: z.ZodString;
                        accountNumber: z.ZodString;
                        accountRecipeId: z.ZodString;
                        amount: z.ZodNumber;
                        amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                        id: z.ZodString;
                        offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                        parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }, {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }, {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            }>;
            quantity: z.ZodNumber;
            refType: z.ZodLiteral<"activity_lts">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }, {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        }>, z.ZodObject<{
            id: z.ZodString;
            account: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            amount: z.ZodNumber;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"account">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            account: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            amount: z.ZodNumber;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"account_pro">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            account: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            amount: z.ZodNumber;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"account_lts">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            account: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            amount: z.ZodNumber;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"ib">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"asset">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"employee_pp">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>, z.ZodObject<{
            id: z.ZodString;
            spread: z.ZodNullable<z.ZodNumber>;
            periodFrom: z.ZodString;
            periodTo: z.ZodString;
            savedScenarioId: z.ZodString;
            allocationKey: z.ZodUnion<[z.ZodIntersection<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                allocations: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    period: z.ZodString;
                    amount: z.ZodNullable<z.ZodNumber>;
                    allocationKeyId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }, {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }>, "many">;
                objectTransaction: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                createdAt: z.ZodString;
                keyType: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }, {
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            }>, z.ZodObject<{
                accountId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }, {
                accountId: string | null;
                organizationalUnitId: string | null;
            }>>, z.ZodNull]>;
            distribution: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                amount: z.ZodNumber;
                objectTransactionId: z.ZodString;
                organizationalUnit: z.ZodUnion<[z.ZodObject<{
                    code: z.ZodString;
                    id: z.ZodString;
                    active: z.ZodBoolean;
                    name: z.ZodString;
                    createdAt: z.ZodDate;
                    planId: z.ZodString;
                    syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
                }, "strip", z.ZodTypeAny, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }, {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                }>, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }, {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }>, "many">;
            customerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            supplierDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            projectDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            productDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            costBearerDim: z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                code: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                name: string;
            }, {
                code: string;
                id: string;
                name: string;
            }>, z.ZodNull]>;
            per: z.ZodEnum<["whole_period", "year", "quarter", "month", "week", "day"]>;
            conversationId: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            refType: z.ZodLiteral<"common">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }, {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        }>]>, "many">;
    }, "strict", z.ZodTypeAny, {
        id: string;
        active: boolean;
        name: string;
        description: string | null;
        taskId: string;
        objectTransactions: ({
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        })[];
        taskIds: string[];
        baseline: boolean;
    }, {
        id: string;
        active: boolean;
        name: string;
        description: string | null;
        taskId: string;
        objectTransactions: ({
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        })[];
        taskIds: string[];
        baseline: boolean;
    }>, "many">;
    accountLinks: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        active: z.ZodBoolean;
        name: z.ZodString;
        description: z.ZodString;
        createdAt: z.ZodDate;
        planId: z.ZodString;
        accounts: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>, "many">;
        ibOnly: z.ZodBoolean;
        accountRecipes: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            description: z.ZodNullable<z.ZodString>;
            createdAt: z.ZodDate;
            name: z.ZodString;
            moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
            versionId: z.ZodString;
            jsonRows: z.ZodArray<z.ZodObject<{
                accountId: z.ZodString;
                accountName: z.ZodString;
                accountNumber: z.ZodString;
                accountRecipeId: z.ZodString;
                amount: z.ZodNumber;
                amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                id: z.ZodString;
                offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        id: string;
        active: boolean;
        name: string;
        description: string;
        createdAt: Date;
        planId: string;
        accountRecipes: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }[];
        accounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        ibOnly: boolean;
    }, {
        id: string;
        active: boolean;
        name: string;
        description: string;
        createdAt: Date;
        planId: string;
        accountRecipes: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }[];
        accounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        ibOnly: boolean;
    }>, "many">;
    assets: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        description: z.ZodString;
        organizationalUnitId: z.ZodUnion<[z.ZodObject<{
            code: z.ZodString;
            id: z.ZodString;
            active: z.ZodBoolean;
            name: z.ZodString;
            createdAt: z.ZodDate;
            planId: z.ZodString;
            syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
        }, "strip", z.ZodTypeAny, {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        }, {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        }>, z.ZodNull]>;
        scenarioId: z.ZodString;
        taskId: z.ZodString;
        assetNumber: z.ZodString;
        assetType: z.ZodObject<{
            id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            name: z.ZodString;
            depreciableAmount: z.ZodNumber;
            note: z.ZodString;
            assetAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            depreciationAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            revaluationAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            writeDownAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            saleCounterAcount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            accumulatedDepreciationsAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            accumulatedWriteDownsAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            capitalGainsAssetsAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            lossesAssetsAccount: z.ZodObject<{
                accountNumber: z.ZodString;
                accountName: z.ZodString;
                id: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodString]>, string, string | bigint>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            }>;
            createdAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            createdAt: Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        }, {
            id: string | bigint;
            name: string;
            createdAt: string | Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
        }>;
        acquisitionValue: z.ZodNumber;
        residualValue: z.ZodNumber;
        acquisitionDate: z.ZodString;
        depreciationStartDate: z.ZodString;
        depreciationPeriodYear: z.ZodNumber;
        depreciationPeriodMonth: z.ZodNumber;
        depreciationFinalDate: z.ZodString;
        depreciationMethod: z.ZodLiteral<"linear">;
        saleValue: z.ZodNullable<z.ZodNumber>;
        saleDate: z.ZodNullable<z.ZodString>;
        revaluationValue: z.ZodNullable<z.ZodNumber>;
        revaluationDate: z.ZodNullable<z.ZodString>;
        writeDownValue: z.ZodNullable<z.ZodNumber>;
        writeDownDate: z.ZodNullable<z.ZodString>;
        discardedDate: z.ZodNullable<z.ZodString>;
        acquisitionAccountRecipe: z.ZodObject<{
            id: z.ZodString;
            description: z.ZodNullable<z.ZodString>;
            createdAt: z.ZodDate;
            name: z.ZodString;
            moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
            versionId: z.ZodString;
            jsonRows: z.ZodArray<z.ZodObject<{
                accountId: z.ZodString;
                accountName: z.ZodString;
                accountNumber: z.ZodString;
                accountRecipeId: z.ZodString;
                amount: z.ZodNumber;
                amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                id: z.ZodString;
                offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }>;
        saleAccountRecipe: z.ZodNullable<z.ZodObject<{
            id: z.ZodString;
            description: z.ZodNullable<z.ZodString>;
            createdAt: z.ZodDate;
            name: z.ZodString;
            moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
            versionId: z.ZodString;
            jsonRows: z.ZodArray<z.ZodObject<{
                accountId: z.ZodString;
                accountName: z.ZodString;
                accountNumber: z.ZodString;
                accountRecipeId: z.ZodString;
                amount: z.ZodNumber;
                amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                id: z.ZodString;
                offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }, {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        description: string;
        organizationalUnitId: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        } | null;
        scenarioId: string;
        taskId: string;
        assetNumber: string;
        assetType: {
            id: string;
            name: string;
            createdAt: Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        acquisitionValue: number;
        residualValue: number;
        acquisitionDate: string;
        depreciationStartDate: string;
        depreciationPeriodYear: number;
        depreciationPeriodMonth: number;
        depreciationFinalDate: string;
        depreciationMethod: "linear";
        acquisitionAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        };
        saleValue: number | null;
        saleDate: string | null;
        saleAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        } | null;
        revaluationValue: number | null;
        revaluationDate: string | null;
        writeDownValue: number | null;
        writeDownDate: string | null;
        discardedDate: string | null;
    }, {
        id: string;
        description: string;
        organizationalUnitId: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        } | null;
        scenarioId: string;
        taskId: string;
        assetNumber: string;
        assetType: {
            id: string | bigint;
            name: string;
            createdAt: string | Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
        };
        acquisitionValue: number;
        residualValue: number;
        acquisitionDate: string;
        depreciationStartDate: string;
        depreciationPeriodYear: number;
        depreciationPeriodMonth: number;
        depreciationFinalDate: string;
        depreciationMethod: "linear";
        acquisitionAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        };
        saleValue: number | null;
        saleDate: string | null;
        saleAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        } | null;
        revaluationValue: number | null;
        revaluationDate: string | null;
        writeDownValue: number | null;
        writeDownDate: string | null;
        discardedDate: string | null;
    }>, "many">;
    employeePerPersons: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        active: z.ZodBoolean;
        distribution: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            amount: z.ZodNumber;
            employeeId: z.ZodString;
            organizationalUnit: z.ZodUnion<[z.ZodObject<{
                code: z.ZodString;
                id: z.ZodString;
                active: z.ZodBoolean;
                name: z.ZodString;
                createdAt: z.ZodDate;
                planId: z.ZodString;
                syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            }, "strip", z.ZodTypeAny, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            }, {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            }>, z.ZodNull]>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }, {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }>, "many">;
        employeeCode: z.ZodString;
        firstName: z.ZodString;
        lastName: z.ZodString;
        employmentDate: z.ZodString;
        birthDate: z.ZodString;
        employedToDate: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        salaryForm: z.ZodUnion<[z.ZodLiteral<"Hour">, z.ZodLiteral<"Month">]>;
        personnelTypeId: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            salaryAccount: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            holidayPayAccount: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            ChangeAccruedHolidayPayAccount: z.ZodObject<{
                id: z.ZodString;
                accountNumber: z.ZodString;
                accountName: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                accountNumber: string;
                accountName: string;
            }, {
                id: string;
                accountNumber: string;
                accountName: string;
            }>;
            createdAt: z.ZodString;
            planId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        }, {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        }>;
        personnelAgreementId: z.ZodObject<{
            id: z.ZodString;
            salaryRevisionMonth: z.ZodString;
            holidayPay: z.ZodNumber;
            holidayAllowance: z.ZodNumber;
            vacationDays: z.ZodNumber;
            groupInsurance: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
            name: z.ZodString;
            createdAt: z.ZodString;
            planId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        }, {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        }>;
        monthlySalary: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
        hourlyPay: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
        salaryRevisionPercent: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
        scenarioId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        serviceLevelAllocationKeyId: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            allocations: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                period: z.ZodString;
                amount: z.ZodNumber;
                employeeAllocationKeyId: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }, {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }>, "many">;
            employeeId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            createdAt: z.ZodString;
            keyType: z.ZodString;
            keyClass: z.ZodUnion<[z.ZodLiteral<"vacation">, z.ZodLiteral<"servicelevel">]>;
            organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        }, {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        }>;
        vacationAllocationKeyId: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            allocations: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                period: z.ZodString;
                amount: z.ZodNumber;
                employeeAllocationKeyId: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }, {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }>, "many">;
            employeeId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
            createdAt: z.ZodString;
            keyType: z.ZodString;
            keyClass: z.ZodUnion<[z.ZodLiteral<"vacation">, z.ZodLiteral<"servicelevel">]>;
            organizationalUnitId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        }, {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        }>;
        taskId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
        benefits: z.ZodArray<z.ZodObject<{
            code: z.ZodString;
            id: z.ZodString;
            active: z.ZodBoolean;
            name: z.ZodString;
            amount: z.ZodNumber;
            createdAt: z.ZodDate;
            planId: z.ZodString;
            syncStatus: z.ZodNullable<z.ZodEnum<["new-in-plan", "changed-in-plan", "sync-updated", "sync-new", "sync-ok", "sync-only-in-plan"]>>;
            refType: z.ZodEnum<["sale", "employee", "activity", "benefit"]>;
            amountPercent: z.ZodNumber;
            taxType: z.ZodUnion<[z.ZodLiteral<"Yes">, z.ZodLiteral<"No">]>;
            socType: z.ZodUnion<[z.ZodLiteral<"Social">, z.ZodLiteral<"Special">, z.ZodLiteral<"No">]>;
            accountRecipes: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                description: z.ZodNullable<z.ZodString>;
                createdAt: z.ZodDate;
                name: z.ZodString;
                moduleTag: z.ZodEnum<["common", "sale", "account", "asset", "employee", "activity_lts", "employee_pp", "finance"]>;
                versionId: z.ZodString;
                jsonRows: z.ZodArray<z.ZodObject<{
                    accountId: z.ZodString;
                    accountName: z.ZodString;
                    accountNumber: z.ZodString;
                    accountRecipeId: z.ZodString;
                    amount: z.ZodNumber;
                    amountType: z.ZodUnion<[z.ZodLiteral<"fixed">, z.ZodLiteral<"percent">]>;
                    id: z.ZodString;
                    offsetDays: z.ZodUnion<[z.ZodNumber, z.ZodNull]>;
                    parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }, {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                createdAt: Date;
                jsonRows: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }[];
            }, {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                createdAt: Date;
                jsonRows: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }[];
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                createdAt: Date;
                jsonRows: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }[];
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }, {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                createdAt: Date;
                jsonRows: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }[];
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        id: string;
        active: boolean;
        distribution: {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }[];
        employeeCode: string;
        firstName: string;
        lastName: string;
        employmentDate: string;
        birthDate: string;
        employedToDate: string | null;
        salaryForm: "Hour" | "Month";
        personnelTypeId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        personnelAgreementId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        };
        monthlySalary: number | null;
        hourlyPay: number | null;
        salaryRevisionPercent: number | null;
        scenarioId: string | null;
        serviceLevelAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        vacationAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        benefits: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                createdAt: Date;
                jsonRows: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }[];
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }[];
        taskId: string | null;
    }, {
        id: string;
        active: boolean;
        distribution: {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }[];
        employeeCode: string;
        firstName: string;
        lastName: string;
        employmentDate: string;
        birthDate: string;
        employedToDate: string | null;
        salaryForm: "Hour" | "Month";
        personnelTypeId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        personnelAgreementId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        };
        monthlySalary: number | null;
        hourlyPay: number | null;
        salaryRevisionPercent: number | null;
        scenarioId: string | null;
        serviceLevelAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        vacationAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        benefits: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                createdAt: Date;
                jsonRows: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }[];
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }[];
        taskId: string | null;
    }>, "many">;
    vatSettings: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        vatType: z.ZodUnion<[z.ZodLiteral<"year">, z.ZodLiteral<"quarter">, z.ZodLiteral<"monthLt40">, z.ZodLiteral<"monthGte40">]>;
        inVatAccounts: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>, "many">;
        outVatAccounts: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>, "many">;
        vatRecAccountAsset: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        vatRecAccountDebt: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        taxAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        checkAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        active: z.ZodBoolean;
        planId: z.ZodString;
        createdAt: z.ZodDate;
        fiscalyearEnd: z.ZodNumber;
        declareDigital: z.ZodBoolean;
        euTrade: z.ZodBoolean;
        individualCompany: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatType: "year" | "quarter" | "monthLt40" | "monthGte40";
        inVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        outVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        vatRecAccountAsset: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatRecAccountDebt: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        taxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        fiscalyearEnd: number;
        declareDigital: boolean;
        euTrade: boolean;
        individualCompany: boolean;
    }, {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatType: "year" | "quarter" | "monthLt40" | "monthGte40";
        inVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        outVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        vatRecAccountAsset: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatRecAccountDebt: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        taxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        fiscalyearEnd: number;
        declareDigital: boolean;
        euTrade: boolean;
        individualCompany: boolean;
    }>, "many">;
    employeeSettings: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        socialSecurityAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        socialSecurityHolidayPayAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        pensionAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        groupInsuranceAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        specialPayrollTaxAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        employeeTaxesDebtAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        socialSecurityDebtAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        accruedHolidayPayDebtAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        accruedSocialSecurityDebtAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        checkAccount: z.ZodObject<{
            id: z.ZodString;
            accountNumber: z.ZodString;
            accountName: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            accountNumber: string;
            accountName: string;
        }, {
            id: string;
            accountNumber: string;
            accountName: string;
        }>;
        name: z.ZodString;
        active: z.ZodBoolean;
        createdAt: z.ZodDate;
        planId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        socialSecurityAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityHolidayPayAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        pensionAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        groupInsuranceAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        specialPayrollTaxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        employeeTaxesDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedHolidayPayDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedSocialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
    }, {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        socialSecurityAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityHolidayPayAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        pensionAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        groupInsuranceAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        specialPayrollTaxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        employeeTaxesDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedHolidayPayDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedSocialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
    }>, "many">;
    taskModules: z.ZodArray<z.ZodObject<{
        task: z.ZodString;
        module: z.ZodString;
        parentId: z.ZodUnion<[z.ZodString, z.ZodNull]>;
    }, "strip", z.ZodTypeAny, {
        module: string;
        parentId: string | null;
        task: string;
    }, {
        module: string;
        parentId: string | null;
        task: string;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    plan: {
        id: string;
        name: string;
        description: string;
        status: "done" | "in_progress";
        createdAt: Date;
        periodFrom: string;
        periodTo: string;
        owner: string;
        rootTaskId: string;
        basedOnPlanId: string | null;
        legalEntityId: string;
        actualsFrom: string;
        comparisonPlans: {
            planId: string;
            taskId: string;
        }[];
        createTemplatesForRegisters: boolean | null;
        createTasksForCostCenters: boolean | null;
        createScenariosFromActuals: boolean | null;
        createScenariosPerTask: boolean | null;
        periodLength: number;
        companyId: string;
        thousands: boolean;
    };
    allScenarios: {
        id: string;
        active: boolean;
        name: string;
        description: string | null;
        taskId: string;
        objectTransactions: ({
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        })[];
        taskIds: string[];
        baseline: boolean;
    }[];
    accountLinks: {
        id: string;
        active: boolean;
        name: string;
        description: string;
        createdAt: Date;
        planId: string;
        accountRecipes: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }[];
        accounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        ibOnly: boolean;
    }[];
    vatSettings: {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatType: "year" | "quarter" | "monthLt40" | "monthGte40";
        inVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        outVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        vatRecAccountAsset: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatRecAccountDebt: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        taxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        fiscalyearEnd: number;
        declareDigital: boolean;
        euTrade: boolean;
        individualCompany: boolean;
    }[];
    taskModules: {
        module: string;
        parentId: string | null;
        task: string;
    }[];
    assets: {
        id: string;
        description: string;
        organizationalUnitId: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        } | null;
        scenarioId: string;
        taskId: string;
        assetNumber: string;
        assetType: {
            id: string;
            name: string;
            createdAt: Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        acquisitionValue: number;
        residualValue: number;
        acquisitionDate: string;
        depreciationStartDate: string;
        depreciationPeriodYear: number;
        depreciationPeriodMonth: number;
        depreciationFinalDate: string;
        depreciationMethod: "linear";
        acquisitionAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        };
        saleValue: number | null;
        saleDate: string | null;
        saleAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        } | null;
        revaluationValue: number | null;
        revaluationDate: string | null;
        writeDownValue: number | null;
        writeDownDate: string | null;
        discardedDate: string | null;
    }[];
    employeePerPersons: {
        id: string;
        active: boolean;
        distribution: {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }[];
        employeeCode: string;
        firstName: string;
        lastName: string;
        employmentDate: string;
        birthDate: string;
        employedToDate: string | null;
        salaryForm: "Hour" | "Month";
        personnelTypeId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        personnelAgreementId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        };
        monthlySalary: number | null;
        hourlyPay: number | null;
        salaryRevisionPercent: number | null;
        scenarioId: string | null;
        serviceLevelAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        vacationAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        benefits: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                createdAt: Date;
                jsonRows: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }[];
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }[];
        taskId: string | null;
    }[];
    employeeSettings: {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        socialSecurityAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityHolidayPayAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        pensionAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        groupInsuranceAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        specialPayrollTaxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        employeeTaxesDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedHolidayPayDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedSocialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
    }[];
}, {
    plan: {
        id: string;
        name: string;
        description: string;
        status: "done" | "in_progress";
        createdAt: Date;
        periodFrom: string;
        periodTo: string;
        owner: string;
        rootTaskId: string;
        basedOnPlanId: string | null;
        legalEntityId: string;
        actualsFrom: string;
        comparisonPlans: {
            planId: string;
            taskId: string;
        }[];
        createTemplatesForRegisters: boolean | null;
        createTasksForCostCenters: boolean | null;
        createScenariosFromActuals: boolean | null;
        createScenariosPerTask: boolean | null;
        periodLength: number;
        companyId: string;
        thousands: boolean;
    };
    allScenarios: {
        id: string;
        active: boolean;
        name: string;
        description: string | null;
        taskId: string;
        objectTransactions: ({
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "account_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            account: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            amount: number;
            refType: "ib";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "asset";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "employee_pp";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "common";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
        } | {
            id: string;
            refType: "sale";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "sale_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_pro";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "employee_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        } | {
            id: string;
            refType: "activity_lts";
            spread: number | null;
            periodFrom: string;
            periodTo: string;
            savedScenarioId: string;
            allocationKey: ({
                id: string;
                name: string;
                keyType: string;
                createdAt: string;
                allocations: {
                    id: string;
                    amount: number | null;
                    period: string;
                    allocationKeyId: string;
                }[];
                objectTransaction: string | null;
            } & {
                accountId: string | null;
                organizationalUnitId: string | null;
            }) | null;
            distribution: {
                id: string;
                amount: number;
                objectTransactionId: string;
                organizationalUnit: {
                    code: string;
                    id: string;
                    active: boolean;
                    name: string;
                    createdAt: Date;
                    planId: string;
                    syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                } | null;
            }[];
            customerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            supplierDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            projectDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            productDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            costBearerDim: {
                code: string;
                id: string;
                name: string;
            } | null;
            per: "day" | "month" | "year" | "quarter" | "week" | "whole_period";
            conversationId: number | null;
            generalObject: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                amount: number;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
                refType: "sale" | "employee" | "activity" | "benefit";
                accountRecipes: {
                    id: string;
                    name: string;
                    description: string | null;
                    moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                    versionId: string;
                    createdAt: Date;
                    jsonRows: {
                        id: string;
                        accountNumber: string;
                        accountName: string;
                        amount: number;
                        offsetDays: number | null;
                        amountType: "fixed" | "percent";
                        parentId: string | null;
                        accountId: string;
                        accountRecipeId: string;
                    }[];
                }[];
            };
            quantity: number;
        })[];
        taskIds: string[];
        baseline: boolean;
    }[];
    accountLinks: {
        id: string;
        active: boolean;
        name: string;
        description: string;
        createdAt: Date;
        planId: string;
        accountRecipes: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        }[];
        accounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        ibOnly: boolean;
    }[];
    vatSettings: {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatType: "year" | "quarter" | "monthLt40" | "monthGte40";
        inVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        outVatAccounts: {
            id: string;
            accountNumber: string;
            accountName: string;
        }[];
        vatRecAccountAsset: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        vatRecAccountDebt: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        taxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        fiscalyearEnd: number;
        declareDigital: boolean;
        euTrade: boolean;
        individualCompany: boolean;
    }[];
    taskModules: {
        module: string;
        parentId: string | null;
        task: string;
    }[];
    assets: {
        id: string;
        description: string;
        organizationalUnitId: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
        } | null;
        scenarioId: string;
        taskId: string;
        assetNumber: string;
        assetType: {
            id: string | bigint;
            name: string;
            createdAt: string | Date;
            depreciableAmount: number;
            note: string;
            assetAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            depreciationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            revaluationAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            writeDownAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            saleCounterAcount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedDepreciationsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            accumulatedWriteDownsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            capitalGainsAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
            lossesAssetsAccount: {
                id: string | bigint;
                accountNumber: string;
                accountName: string;
            };
        };
        acquisitionValue: number;
        residualValue: number;
        acquisitionDate: string;
        depreciationStartDate: string;
        depreciationPeriodYear: number;
        depreciationPeriodMonth: number;
        depreciationFinalDate: string;
        depreciationMethod: "linear";
        acquisitionAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        };
        saleValue: number | null;
        saleDate: string | null;
        saleAccountRecipe: {
            id: string;
            name: string;
            description: string | null;
            moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
            versionId: string;
            createdAt: Date;
            jsonRows: {
                id: string;
                accountNumber: string;
                accountName: string;
                amount: number;
                offsetDays: number | null;
                amountType: "fixed" | "percent";
                parentId: string | null;
                accountId: string;
                accountRecipeId: string;
            }[];
        } | null;
        revaluationValue: number | null;
        revaluationDate: string | null;
        writeDownValue: number | null;
        writeDownDate: string | null;
        discardedDate: string | null;
    }[];
    employeePerPersons: {
        id: string;
        active: boolean;
        distribution: {
            id: string;
            amount: number;
            organizationalUnit: {
                code: string;
                id: string;
                active: boolean;
                name: string;
                createdAt: Date;
                planId: string;
                syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            } | null;
            employeeId: string;
        }[];
        employeeCode: string;
        firstName: string;
        lastName: string;
        employmentDate: string;
        birthDate: string;
        employedToDate: string | null;
        salaryForm: "Hour" | "Month";
        personnelTypeId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            holidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
            ChangeAccruedHolidayPayAccount: {
                id: string;
                accountNumber: string;
                accountName: string;
            };
        };
        personnelAgreementId: {
            id: string;
            name: string;
            createdAt: string;
            planId: string;
            salaryRevisionMonth: string;
            holidayPay: number;
            holidayAllowance: number;
            vacationDays: number;
            groupInsurance: number | null;
        };
        monthlySalary: number | null;
        hourlyPay: number | null;
        salaryRevisionPercent: number | null;
        scenarioId: string | null;
        serviceLevelAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        vacationAllocationKeyId: {
            id: string;
            name: string;
            keyType: string;
            createdAt: string;
            allocations: {
                id: string;
                amount: number;
                period: string;
                employeeAllocationKeyId: string;
            }[];
            organizationalUnitId: string | null;
            employeeId: string | null;
            keyClass: "vacation" | "servicelevel";
        };
        benefits: {
            code: string;
            id: string;
            active: boolean;
            name: string;
            amount: number;
            createdAt: Date;
            planId: string;
            syncStatus: "new-in-plan" | "changed-in-plan" | "sync-updated" | "sync-new" | "sync-ok" | "sync-only-in-plan" | null;
            refType: "sale" | "employee" | "activity" | "benefit";
            accountRecipes: {
                id: string;
                name: string;
                description: string | null;
                moduleTag: "common" | "sale" | "account" | "asset" | "employee" | "activity_lts" | "employee_pp" | "finance";
                versionId: string;
                createdAt: Date;
                jsonRows: {
                    id: string;
                    accountNumber: string;
                    accountName: string;
                    amount: number;
                    offsetDays: number | null;
                    amountType: "fixed" | "percent";
                    parentId: string | null;
                    accountId: string;
                    accountRecipeId: string;
                }[];
            }[];
            amountPercent: number;
            taxType: "Yes" | "No";
            socType: "No" | "Social" | "Special";
        }[];
        taskId: string | null;
    }[];
    employeeSettings: {
        id: string;
        active: boolean;
        name: string;
        createdAt: Date;
        planId: string;
        socialSecurityAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityHolidayPayAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        pensionAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        groupInsuranceAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        specialPayrollTaxAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        employeeTaxesDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        socialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedHolidayPayDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        accruedSocialSecurityDebtAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
        checkAccount: {
            id: string;
            accountNumber: string;
            accountName: string;
        };
    }[];
}>, "many">;
export declare type GetPlanComparisonDataResponse = z.infer<typeof getPlanComparisonDataResponseSchema>;
